defmodule FuzzyInputsTest do
  use ExUnit.Case
  doctest FuzzyInput.Inputs

  alias FuzzyInput.Inputs

  @watering_time ~U[2024-07-31 07:15:00Z] 

  @forecast_full [
    {"2024-07-31T02:00:00Z", 0, 32.19},
    {"2024-07-31T03:00:00Z", 0, 31.63},
    {"2024-07-31T04:00:00Z", 0, 30.77},
    {"2024-07-31T05:00:00Z", 0, 30},
    {"2024-07-31T06:00:00Z", 0, 29.39},
    {"2024-07-31T07:00:00Z", 0, 28.96},
    {"2024-07-31T08:00:00Z", 0, 28.07},
    {"2024-07-31T09:00:00Z", 0, 27.53},
    {"2024-07-31T10:00:00Z", 0, 27},
    {"2024-07-31T11:00:00Z", 0, 26.81},
    {"2024-07-31T12:00:00Z", 0, 26.07},
    {"2024-07-31T13:00:00Z", 0, 27},
    {"2024-07-31T14:00:00Z", 0, 28.07},
    {"2024-07-31T15:00:00Z", 0, 29.96},
    {"2024-07-31T16:00:00Z", 0, 31.31},
    {"2024-07-31T17:00:00Z", 0, 33.63},
    {"2024-07-31T18:00:00Z", 0, 34},
    {"2024-07-31T19:00:00Z", 0, 36},
    {"2024-07-31T20:00:00Z", 0, 36.14},
    {"2024-07-31T21:00:00Z", 0, 36.77},
    {"2024-07-31T22:00:00Z", 0, 37.54},
    {"2024-07-31T23:00:00Z", 0, 36.63},
    {"2024-08-01T00:00:00Z", 0, 36},
    {"2024-08-01T01:00:00Z", 0, 34},
    {"2024-08-01T02:00:00Z", 0, 32.63},
    {"2024-08-01T03:00:00Z", 0, 31.77},
    {"2024-08-01T04:00:00Z", 0, 30.81},
    {"2024-08-01T05:00:00Z", 0, 29.96},
    {"2024-08-01T06:00:00Z", 0, 29},
    {"2024-08-01T07:00:00Z", 0, 28.07},
    {"2024-08-01T08:00:00Z", 0, 27.39},
    {"2024-08-01T09:00:00Z", 0, 26.81},
    {"2024-08-01T10:00:00Z", 0, 26},
    {"2024-08-01T11:00:00Z", 0, 25.31},
    {"2024-08-01T12:00:00Z", 0, 25},
    {"2024-08-01T13:00:00Z", 0, 26},
    {"2024-08-01T14:00:00Z", 0, 27.31},
    {"2024-08-01T15:00:00Z", 0, 29.31},
    {"2024-08-01T16:00:00Z", 0, 31.77},
    {"2024-08-01T17:00:00Z", 0, 33.91},
    {"2024-08-01T18:00:00Z", 0, 35.63},
    {"2024-08-01T19:00:00Z", 0, 35.86},
    {"2024-08-01T20:00:00Z", 0, 36.82},
    {"2024-08-01T21:00:00Z", 0, 37.46},
    {"2024-08-01T22:00:00Z", 0, 37.61},
    {"2024-08-01T23:00:00Z", 0, 37.28},
    {"2024-08-02T00:00:00Z", 0, 36.22},
    {"2024-08-02T01:00:00Z", 0, 34.11},
    {"2024-08-02T02:00:00Z", 0, 32.6},
    {"2024-08-02T03:00:00Z", 0, 31.43},
    {"2024-08-02T04:00:00Z", 0, 30.74},
    {"2024-08-02T05:00:00Z", 0, 30.06},
    {"2024-08-02T06:00:00Z", 0, 29.36},
    {"2024-08-02T07:00:00Z", 0, 28.69},
    {"2024-08-02T08:00:00Z", 0, 28},
    {"2024-08-02T09:00:00Z", 0, 27.29},
    {"2024-08-02T10:00:00Z", 0, 26.81},
    {"2024-08-02T11:00:00Z", 0, 26.39},
    {"2024-08-02T12:00:00Z", 0, 26.17},
    {"2024-08-02T13:00:00Z", 0, 27.5},
    {"2024-08-02T14:00:00Z", 0, 29.06},
    {"2024-08-02T15:00:00Z", 0, 30.91},
    {"2024-08-02T16:00:00Z", 0, 32.78},
    {"2024-08-02T17:00:00Z", 0, 34.72},
    {"2024-08-02T18:00:00Z", 0, 36.41},
    {"2024-08-02T19:00:00Z", 0, 37.6},
    {"2024-08-02T20:00:00Z", 0, 38.52},
    {"2024-08-02T21:00:00Z", 0, 39.06},
    {"2024-08-02T22:00:00Z", 0, 38.94},
    {"2024-08-02T23:00:00Z", 0, 38.77},
    {"2024-08-03T00:00:00Z", 0, 38.47},
    {"2024-08-03T01:00:00Z", 0, 37.22},
    {"2024-08-03T02:00:00Z", 0, 35.95},
    {"2024-08-03T03:00:00Z", 0, 33.28},
    {"2024-08-03T04:00:00Z", 0, 32.77},
    {"2024-08-03T05:00:00Z", 0, 32.01},
    {"2024-08-03T06:00:00Z", 0, 31.38},
    {"2024-08-03T07:00:00Z", 0, 31.18},
    {"2024-08-03T08:00:00Z", 0, 30.54},
    {"2024-08-03T09:00:00Z", 0, 30.17},
    {"2024-08-03T10:00:00Z", 0, 30.22},
    {"2024-08-03T11:00:00Z", 0, 28.34},
    {"2024-08-03T12:00:00Z", 0, 28.11},
    {"2024-08-03T13:00:00Z", 0, 29.76},
    {"2024-08-03T14:00:00Z", 0, 32.12},
    {"2024-08-03T15:00:00Z", 0, 34.6},
    {"2024-08-03T16:00:00Z", 0, 37.02},
    {"2024-08-03T17:00:00Z", 0, 38.84},
    {"2024-08-03T18:00:00Z", 0, 40.19},
    {"2024-08-03T19:00:00Z", 0, 41.12},
    {"2024-08-03T20:00:00Z", 0, 41.66},
    {"2024-08-03T21:00:00Z", 0, 40.95},
    {"2024-08-03T22:00:00Z", 0, 34.36},
    {"2024-08-03T23:00:00Z", 0, 39.61},
    {"2024-08-04T00:00:00Z", 0, 32.8},
    {"2024-08-04T01:00:00Z", 0, 33.41},
    {"2024-08-04T02:00:00Z", 0, 31.77},
    {"2024-08-04T03:00:00Z", 0, 31.13},
    {"2024-08-04T04:00:00Z", 0, 30.87},
    {"2024-08-04T05:00:00Z", 0.98, 26.58},
    {"2024-08-04T06:00:00Z", 1.17, 25.85},
    {"2024-08-04T07:00:00Z", 0, 26.07},
    {"2024-08-04T08:00:00Z", 0, 25.73},
    {"2024-08-04T09:00:00Z", 0, 26.21},
    {"2024-08-04T10:00:00Z", 0, 26.48},
    {"2024-08-04T11:00:00Z", 0, 26.09},
    {"2024-08-04T12:00:00Z", 0, 26.59},
    {"2024-08-04T13:00:00Z", 0, 27.93},
    {"2024-08-04T14:00:00Z", 0, 29.4},
    {"2024-08-04T15:00:00Z", 0, 30.84},
    {"2024-08-04T16:00:00Z", 0, 32.39},
    {"2024-08-04T17:00:00Z", 0, 34.06},
    {"2024-08-04T18:00:00Z", 0, 35.58},
    {"2024-08-04T19:00:00Z", 0, 36.35},
    {"2024-08-04T20:00:00Z", 0, 37.12},
    {"2024-08-04T21:00:00Z", 0, 37.89},
    {"2024-08-04T22:00:00Z", 0, 37.74},
    {"2024-08-04T23:00:00Z", 0, 37.6},
    {"2024-08-05T00:00:00Z", 0, 37.45},
    {"2024-08-05T01:00:00Z", 0, 35.99}
  ]

  @history_full [
    {"2024-07-30T03:00:00Z", 0, 31.38},
    {"2024-07-30T04:00:00Z", 0, 30.5},
    {"2024-07-30T05:00:00Z", 0, 29.5},
    {"2024-07-30T06:00:00Z", 0, 29.38},
    {"2024-07-30T07:00:00Z", 0, 29},
    {"2024-07-30T08:00:00Z", 0, 28.19},
    {"2024-07-30T09:00:00Z", 0, 27.81},
    {"2024-07-30T10:00:00Z", 0, 27.38},
    {"2024-07-30T11:00:00Z", 0, 26.81},
    {"2024-07-30T12:00:00Z", 0, 25.88},
    {"2024-07-30T13:00:00Z", 0, 26.69},
    {"2024-07-30T14:00:00Z", 0, 28.63},
    {"2024-07-30T15:00:00Z", 0, 29.88},
    {"2024-07-30T16:00:00Z", 0, 31.63},
    {"2024-07-30T17:00:00Z", 0, 33.38},
    {"2024-07-30T18:00:00Z", 0, 34.69},
    {"2024-07-30T19:00:00Z", 0, 35.38},
    {"2024-07-30T20:00:00Z", 0, 36.19},
    {"2024-07-30T21:00:00Z", 0, 36.31},
    {"2024-07-30T22:00:00Z", 0, 36.13},
    {"2024-07-30T23:00:00Z", 0, 35.69},
    {"2024-07-31T00:00:00Z", 0, 35.31},
    {"2024-07-31T01:00:00Z", 0, 33.88},
    {"2024-07-31T02:00:00Z", 0, 32.19}
  ]

  @pre_watering [
    {"2024-07-30T08:00:00Z", 0, 28.19},
    {"2024-07-30T09:00:00Z", 0, 27.81},
    {"2024-07-30T10:00:00Z", 0, 27.38},
    {"2024-07-30T11:00:00Z", 0, 26.81},
    {"2024-07-30T12:00:00Z", 0, 25.88},
    {"2024-07-30T13:00:00Z", 0, 26.69},
    {"2024-07-30T14:00:00Z", 0, 28.63},
    {"2024-07-30T15:00:00Z", 0, 29.88},
    {"2024-07-30T16:00:00Z", 0, 31.63},
    {"2024-07-30T17:00:00Z", 0, 33.38},
    {"2024-07-30T18:00:00Z", 0, 34.69},
    {"2024-07-30T19:00:00Z", 0, 35.38},
    {"2024-07-30T20:00:00Z", 0, 36.19},
    {"2024-07-30T21:00:00Z", 0, 36.31},
    {"2024-07-30T22:00:00Z", 0, 36.13},
    {"2024-07-30T23:00:00Z", 0, 35.69},
    {"2024-07-31T00:00:00Z", 0, 35.31},
    {"2024-07-31T01:00:00Z", 0, 33.88},
    {"2024-07-31T02:00:00Z", 0, 32.19},
    {"2024-07-31T03:00:00Z", 0, 31.63},
    {"2024-07-31T04:00:00Z", 0, 30.77},
    {"2024-07-31T05:00:00Z", 0, 30},
    {"2024-07-31T06:00:00Z", 0, 29.39},
    {"2024-07-31T07:00:00Z", 0, 28.96},
  ]

  setup_all do
    :ok
  end

  setup do
    [
      forecast_full: @forecast_full,
      history_full: @history_full,
      watering_time: @watering_time,
      pre_watering: @pre_watering 
    ]
  end

  test "calculates wetness score decay" do
    now = NaiveDateTime.local_now()
    set_date1 = NaiveDateTime.add(now, -12 * 60 * 60, :second)
    assert Inputs.decay_wetness_score({100, set_date1, now}) == 50

    set_date2 = NaiveDateTime.add(now, -18 * 60 * 60, :second)
    assert Inputs.decay_wetness_score({100, set_date2, now}) == 25 
  end 

  test "merge history and forecast based on date", context do
    assert Inputs.prewatering_history(context.history_full, context.forecast_full, context.watering_time) ==
      context.pre_watering       
  end

  test "adds rain accumulation and avg temp based on prewatering history", context do
    IO.inspect(context.pre_watering)
    assert Inputs.seat_weather_data(context.pre_watering) ==
      %Inputs{
        rain_24h_prior: 0,
        temp_24h_prior: 31,
        wetness_score: 0,
        watering_36h_prior: 0
      }   
  end
end
